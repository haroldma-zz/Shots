<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:common="using:Shots.Common"
    mc:Ignorable="d">
    <SolidColorBrush x:Key="ShotsAccentColor" Color="#26D1F3" />
    <FontFamily x:Key="PhoneFontFamilyNormal">Segoe UI</FontFamily>
    <FontWeight x:Key="PhoneButtonFontWeight">Light</FontWeight>
    <x:Double x:Key="TextStyleLargeFontSize">30</x:Double>
    
    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="25"/>
    </Style>
    
    <Style TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ShotsAccentColor}"/>
        <Setter Property="BorderThickness" Value="{ThemeResource PhoneBorderThickness}"/>
        <Setter Property="FontFamily" Value="{ThemeResource PhoneFontFamilyNormal}"/>
        <Setter Property="FontWeight" Value="{ThemeResource PhoneButtonFontWeight}"/>
        <Setter Property="FontSize" Value="{ThemeResource TextStyleLargeFontSize}"/>
        <Setter Property="MinWidth" Value="{ThemeResource PhoneButtonMinWidth}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Grid" Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Pressed" To="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="PointerOver" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed" To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid"/>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="Grid"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00.01" Value="#7F000000"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="10"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush
        x:Key="SplitHeaderBrush"
        Color="#2a5748" />
    <SolidColorBrush
        x:Key="SplitBorderBrush"
        Color="#2a5748" />
    <SolidColorBrush
        x:Key="SplitTextBrush"
        Color="#84a399" />
    <Style
        x:Name="SplitBrTextBoxStyle"
        TargetType="common:BrTextBox">
        <Setter
            Property="MaxWidth"
            Value="350" />
        <Setter
            Property="Width"
            Value="350" />
        <Setter
            Property="MinHeight"
            Value="60" />
        <Setter
            Property="Foreground"
            Value="{StaticResource SplitTextBrush}" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="BorderBrush"
            Value="{StaticResource SplitBorderBrush}" />
        <Setter
            Property="SelectionHighlightColor"
            Value="Red" />
        <Setter
            Property="BorderThickness"
            Value="0,3" />
        <Setter
            Property="FontWeight"
            Value="SemiBold" />
        <Setter
            Property="FontSize"
            Value="32" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="common:BrTextBox">
                    <Grid
                        Width="{TemplateBinding Width}"
                        MaxHeight="{TemplateBinding MaxWidth}">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="70" />
                            <RowDefinition
                                Height="Auto" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Disabled" />
                                <VisualState
                                    x:Name="Normal" />
                                <VisualState
                                    x:Name="PointerOver" />
                                <VisualState
                                    x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup
                                x:Name="ExpandStates">
                                <VisualState
                                    x:Name="Expand">
                                    <Storyboard>
                                        <DoubleAnimation
                                            EnableDependentAnimation="True"
                                            Duration="0:0:0.2"
                                            BeginTime="0"
                                            To="70"
                                            From="60"
                                            Storyboard.TargetProperty="(FrameworkElement.Height)"
                                            Storyboard.TargetName="BorderElement">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase
                                                    EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            EnableDependentAnimation="True"
                                            Duration="0:0:0.2"
                                            To="-54"
                                            From="0"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                            Storyboard.TargetName="HeaderContentPresenter">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase
                                                    EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                                <VisualState
                                    x:Name="Collapse">
                                    <Storyboard>
                                        <DoubleAnimation
                                            EnableDependentAnimation="True"
                                            Duration="0:0:0.2"
                                            BeginTime="0"
                                            To="60"
                                            Storyboard.TargetProperty="(FrameworkElement.Height)"
                                            Storyboard.TargetName="BorderElement">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase
                                                    EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <DoubleAnimation
                                            EnableDependentAnimation="True"
                                            Duration="0:0:0.2"
                                            To="0"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                            Storyboard.TargetName="HeaderContentPresenter">
                                            <DoubleAnimation.EasingFunction>
                                                <CircleEase
                                                    EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup
                                x:Name="ButtonStates">
                                <VisualState
                                    x:Name="ButtonVisible" />
                                <VisualState
                                    x:Name="ButtonCollapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            x:Name="BackgroundElement"
                            Background="Transparent"
                            Grid.Row="1" />
                        <Border
                            x:Name="BorderElement"
                            MinHeight="{TemplateBinding MinHeight}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Grid.Row="1" />
                        <ContentPresenter
                            x:Name="HeaderContentPresenter"
                            FontSize="18"
                            Foreground="{StaticResource SplitHeaderBrush}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Grid.Row="1"
                            Margin="8"
                            RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <CompositeTransform />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <ScrollViewer
                            x:Name="ContentElement"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            Padding="8,8,8,0"
                            IsTabStop="False"
                            AutomationProperties.AccessibilityView="Raw"
                            Height="{TemplateBinding MinHeight}"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            ZoomMode="Disabled"
                            Grid.Row="1" />
                        <ContentControl
                            Visibility="Collapsed"
                            x:Name="PlaceholderTextContentPresenter"
                            Foreground="{ThemeResource TextBoxPlaceholderTextThemeBrush}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                            Content="{TemplateBinding PlaceholderText}"
                            IsHitTestVisible="False"
                            Grid.Row="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush
        x:Key="FlipHeaderBrush"
        Color="Black" />
    <SolidColorBrush
        x:Key="FlipBorderBrush"
        Color="#19000000" />
    <SolidColorBrush
        x:Key="FlipTextBrush"
        Color="#FF849DA3" />
    <Style
        x:Name="FlipBrTextBoxStyle"
        TargetType="common:BrTextBox">
        <Setter
            Property="HorizontalAlignment"
            Value="Stretch" />
        <Setter
            Property="MinHeight"
            Value="60" />
        <Setter
            Property="Foreground"
            Value="Black" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="BorderBrush"
            Value="#B2000000" />
        <Setter
            Property="SelectionHighlightColor"
            Value="Red" />
        <Setter
            Property="BorderThickness"
            Value="0,0,0,4" />
        <Setter
            Property="FontWeight"
            Value="Light" />
        <Setter
            Property="FontSize"
            Value="32" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="common:BrTextBox">
                    <Grid
                        Width="{TemplateBinding Width}"
                        MaxHeight="{TemplateBinding MaxWidth}">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="Auto" />
                            <RowDefinition
                                Height="Auto" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Disabled" />
                                <VisualState
                                    x:Name="Normal" />
                                <VisualState
                                    x:Name="PointerOver" />
                                <VisualState
                                    x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup
                                x:Name="ExpandStates">
                                <VisualState
                                    x:Name="Expand">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0:0:0.25"
                                            BeginTime="0"
                                            To="0"
                                            From="-90"
                                            Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)"
                                            Storyboard.TargetName="FlipBorder" />
                                        <DoubleAnimation
                                            Duration="0:0:0.25"
                                            BeginTime="0"
                                            To="0"
                                            From="1"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                            Storyboard.TargetName="BorderElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState
                                    x:Name="Collapse">
                                    <Storyboard>
                                        <DoubleAnimation
                                            Duration="0:0:0.3"
                                            BeginTime="0"
                                            From="-1"
                                            To="-90"
                                            Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)"
                                            Storyboard.TargetName="FlipBorder" />
                                        <DoubleAnimation
                                            Duration="0:0:0.3"
                                            BeginTime="0"
                                            To="1"
                                            From="0"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                            Storyboard.TargetName="BorderElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup
                                x:Name="ButtonStates">
                                <VisualState
                                    x:Name="ButtonVisible" />
                                <VisualState
                                    x:Name="ButtonCollapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
                            x:Name="BackgroundElement"
                            Background="Transparent" />
                        <Border
                            Grid.Row="0" x:Name="FlipBorder"
                            Height="60"
                            Background="{StaticResource FlipBorderBrush}">
                            <Border.Projection>
                                <PlaneProjection
                                    CenterOfRotationY="1"
                                    RotationX="-90" />
                            </Border.Projection>
                        </Border>
                        <Border
                            Grid.Row="0" x:Name="BorderElement"
                            MinHeight="{TemplateBinding MinHeight}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            RenderTransformOrigin="0.5,1">
                            <Border.RenderTransform>
                                <ScaleTransform />
                            </Border.RenderTransform>
                        </Border>
                        <ContentPresenter
                            x:Name="HeaderContentPresenter"
                            FontSize="18"
                            Foreground="{StaticResource FlipHeaderBrush}"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="8"
                            RenderTransformOrigin="0.5,0.5"
                            Grid.Row="1">
                            <ContentPresenter.RenderTransform>
                                <CompositeTransform />
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <ScrollViewer
                            Grid.Row="0" x:Name="ContentElement"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            Padding="8,8,8,0"
                            IsTabStop="False"
                            AutomationProperties.AccessibilityView="Raw"
                            Height="{TemplateBinding MinHeight}"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            ZoomMode="Disabled" />
                        <ContentControl
                            Grid.Row="0" Visibility="Collapsed"
                            x:Name="PlaceholderTextContentPresenter"
                            Foreground="{ThemeResource TextBoxPlaceholderTextThemeBrush}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                            Content="{TemplateBinding PlaceholderText}"
                            IsHitTestVisible="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <FontFamily x:Key="ContentControlThemeFontFamily">Segoe WP</FontFamily>
    <x:Double x:Key="ControlContentThemeFontSize">12</x:Double>
    <Thickness x:Key="ListViewItemMargin">0</Thickness>
    <SolidColorBrush x:Key="CheckBoxBackgroundThemeBrush" Color="Transparent"/>
    <x:Double x:Key="CheckBoxBorderThemeThickness">2.5</x:Double>
    <x:Double x:Key="ListViewItemContentOffsetX">-40.5</x:Double>
    <Thickness x:Key="ListViewItemMultiselectCheckBoxMargin">0,9.5,0,0</Thickness>
    <Thickness x:Key="GridViewItemMultiselectBorderThickness">2.5</Thickness>
    <x:Double x:Key="ListViewItemDisabledThemeOpacity">0.4</x:Double>
    <x:Double x:Key="ListViewItemContentTranslateX">40.5</x:Double>
    <x:Double x:Key="ListViewItemReorderHintThemeOffset">32</x:Double>
    <Style TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="False"/>
        <Setter Property="Margin" Value="{ThemeResource ListViewItemMargin}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="OuterContainer" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform x:Name="ContentScaleTransform"/>
                        </Border.RenderTransform>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="CheckboxPressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="CheckboxTiltContainer"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Stroke" Storyboard.TargetName="NormalRectangle">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="CheckGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource CheckBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected"/>
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="CheckGlyph"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DataVirtualizationStates">
                                <VisualState x:Name="DataAvailable"/>
                                <VisualState x:Name="DataPlaceholder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="MultiSelectStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="ListMultiSelect" GeneratedDuration="0:0:0.15" To="NoMultiSelect"/>
                                    <VisualTransition From="NoMultiSelect" GeneratedDuration="0:0:0.15" To="ListMultiSelect"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoMultiSelect"/>
                                <VisualState x:Name="ListMultiSelect">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="CheckboxContainerTranslateTransform"/>
                                        <DoubleAnimation Duration="0" To="{ThemeResource ListViewItemContentTranslateX}" Storyboard.TargetProperty="X" Storyboard.TargetName="ContentBorderTranslateTransform"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="GridMultiSelect">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderModeStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="ReorderEnabled" GeneratedDuration="00:00:00.2" To="ReorderDisabled"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="ReorderEnabled">
                                    <Storyboard>
                                        <DropTargetItemThemeAnimation Storyboard.TargetName="OuterContainer"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Reorderable">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentScaleTransform">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleY" Storyboard.TargetName="ContentScaleTransform">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.075" Value="1.05"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.2" Value="1.0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReorderDisabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ReorderHintStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NoReorderHint"/>
                                <VisualState x:Name="BottomReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RightReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Storyboard.TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="TopReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Top" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LeftReorderHint">
                                    <Storyboard>
                                        <DragOverThemeAnimation Direction="Left" ToOffset="0" Storyboard.TargetName="ReorderHintContent"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ReorderHintContent" Background="Transparent">
                            <Border x:Name="CheckboxTiltContainer" HorizontalAlignment="Left" Margin="{ThemeResource ListViewItemMultiselectCheckBoxMargin}" VerticalAlignment="Top">
                                <Border x:Name="CheckboxOuterContainer">
                                    <Border.Clip>
                                        <RectangleGeometry Rect="0,0,25.5,25.5"/>
                                    </Border.Clip>
                                    <Grid x:Name="CheckboxContainer">
                                        <Grid.RenderTransform>
                                            <TranslateTransform x:Name="CheckboxContainerTranslateTransform" X="{ThemeResource ListViewItemContentOffsetX}"/>
                                        </Grid.RenderTransform>
                                        <Rectangle x:Name="NormalRectangle" Fill="{ThemeResource CheckBoxBackgroundThemeBrush}" Height="25.5" Stroke="{ThemeResource CheckBoxBorderThemeBrush}" StrokeThickness="{ThemeResource CheckBoxBorderThemeThickness}" Width="25.5"/>
                                        <Path x:Name="CheckGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource CheckBoxForegroundThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="17" IsHitTestVisible="False" Opacity="0" Stretch="Fill" StrokeThickness="2.5" StrokeLineJoin="Round" VerticalAlignment="Center" Width="18.5"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <Border x:Name="ContentContainer">
                                <Border x:Name="TiltContainer">
                                    <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="ContentBorderTranslateTransform"/>
                                        </Border.RenderTransform>
                                        <Grid>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <TextBlock x:Name="PlaceholderTextBlock" AutomationProperties.AccessibilityView="Raw" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                                            <Rectangle x:Name="PlaceholderRect" Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
                                        </Grid>
                                    </Border>
                                </Border>
                            </Border>
                            <Border x:Name="SelectedBorder" BorderBrush="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" BorderThickness="{ThemeResource GridViewItemMultiselectBorderThickness}" IsHitTestVisible="False" Opacity="0">
                                <Grid x:Name="SelectedCheckMark" HorizontalAlignment="Right" Height="34" Opacity="0" VerticalAlignment="Top" Width="34">
                                    <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{ThemeResource ListViewItemSelectedBackgroundThemeBrush}" Stretch="Fill"/>
                                    <Path x:Name="SelectedGlyph" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" Fill="{ThemeResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="14.5" Margin="0,1,1,0" Stretch="Fill" VerticalAlignment="Top" Width="17"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>